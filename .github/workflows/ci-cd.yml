name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
      - feature/*
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    name: Build and Test Application
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üîß Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: üöÄ Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: üõ†Ô∏è Grant execute permissions for Maven Wrapper
        run: chmod +x ./mvnw

      - name: ‚úÖ Build and run tests
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_APPLICATION_NAME: ${{ secrets.SPRING_APPLICATION_NAME }}
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_JPA_HIBERNATE_DDL_AUTO: ${{ vars.SPRING_JPA_HIBERNATE_DDL_AUTO }}
          SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: ${{ secrets.SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL }}
          SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: ${{ secrets.SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT }}
          SERVER_PORT: ${{ vars.SERVER_PORT }}
          LOGGING_LEVEL_ROOT: ${{ vars.LOGGING_LEVEL_ROOT }}
          LOGGING_LEVEL_COM_FORMATIONAPI: ${{ vars.LOGGING_LEVEL_COM_FORMATIONAPI }}
          LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BOOT_WEB_EMBEDDED_TOMCAT: ${{ vars.LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BOOT_WEB_EMBEDDED_TOMCAT }}
          LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: ${{ vars.LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY }}
          SPRING_SECURITY_USER_NAME: ${{ secrets.SPRING_SECURITY_USER_NAME }}
          SPRING_SECURITY_USER_PASSWORD: ${{ secrets.SPRING_SECURITY_USER_PASSWORD }}
          ORLEANS_STAY_APP_JWT_SECRET: ${{ secrets.ORLEANS_STAY_APP_JWT_SECRET }}
          ORLEANS_STAY_APP_JWT_EXPIRATIONMS: ${{ secrets.ORLEANS_STAY_APP_JWT_EXPIRATIONMS }}
          ORLEANS_STAY_APP_JWT_EXPIRATIONNEWPASSWORDTOKENMS: ${{ secrets.ORLEANS_STAY_APP_JWT_EXPIRATIONNEWPASSWORDTOKENMS }}
          WEB_CORS_ALLOWEDORIGINS: ${{ secrets.WEB_CORS_ALLOWEDORIGINS }}
          WEB_CORS_ALLOWEDMETHODS: ${{ secrets.WEB_CORS_ALLOWEDMETHODS }}
          WEB_CORS_ALLOWCREDENTIALS: ${{ secrets.WEB_CORS_ALLOWCREDENTIALS }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_FOLDER: ${{ secrets.CLOUDINARY_FOLDER }}
          MAILJET_API_KEY: ${{ secrets.MAILJET_API_KEY }}
          MAILJET_SECRET_KEY: ${{ secrets.MAILJET_SECRET_KEY }}
          MAILJET_RESA_ACCEPTE_TEMPLATE_ID: ${{ secrets.MAILJET_RESA_ACCEPTE_TEMPLATE_ID }}
          MAILJET_DEMANDE_RESA_TEMPLATE_ID: ${{ secrets.MAILJET_DEMANDE_RESA_TEMPLATE_ID }}
          MAILJET_DEMANDE_ARRHES_TEMPLATE_ID: ${{ secrets.MAILJET_DEMANDE_ARRHES_TEMPLATE_ID }}
          MAILJET_RESA_REFUSEE_TEMPLATE_ID: ${{ secrets.MAILJET_RESA_REFUSEE_TEMPLATE_ID }}
          MAILJET_RESA_ANNULEE_TEMPLATE_ID: ${{ secrets.MAILJET_RESA_ANNULEE_TEMPLATE_ID }}
          MAILJET_REINITIALISATION_MDP_TEMPLATE_ID: ${{ secrets.MAILJET_REINITIALISATION_MDP_TEMPLATE_ID }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          DOMAIN_EMAIL: ${{ secrets.DOMAIN_EMAIL}}
        run: ./mvnw clean test